# 作用域（scope）
# 作用域指的是变量生效的区域

# b = 20#全局变量

# def fn():
# 	a = 10#a定义在了函数内部，所以他的作用域就是函数内部，函数外部无法访问
# 	print('函数内部：','a = ',a)
# 	print('函数内部：','b = ',b)

# # fn()
# print('函数外部：','a = ',a)
# print('函数外部：','b = ',b)

#在Python中一共有两种作用域
#	全局作用域
#		-全局作用域在程序执行时创建，在程序执行结束时销毁
#		-所有函数以外的区域都是全局作用域
#
#	函数作用域
#   	- 函数作用域在函数调用时创建，在调用结束时销毁
#   	- 函数每调用一次就会产生一个新的函数作用域
#   	- 在函数作用域中定义的变量，都是局部变量，它只能在函数内部被访问
# 	变量查找
# 		-当我们使用变量的时，会优先在当前作用域中寻找该变量，如果有则使用
#			如果没有则继续去上一级作用域中寻找，如果有则使用，
#			如果依然没有则继续去上一级作用域中寻找，依此类推
# 			直到找到全局作用域，依然没有找到，则会抛出异常
# 			NameError: name 'a' is not defined
# 			直到找到全局作用域，依然没有找到，则会抛出异常
# 

def fn2():
	a =30 

	def fn3():
		print('fn3中：','a = ',a)
	fn3()


# fn2()

a = 20
def fn3():
	# a = 10 # 在函数中为变量赋值时,默认都是为局部变量赋值
	# 如果希望在函数内部修改全局变量，则需要使用global关键字，来声明变量
	global a #声明在函数内部使用的a是使用的全局变量，此时再去修改a时，就是在修改全局的a

	a = 10 #修改全局变量
	print('函数内部：','a = ',a)
fn3()
print('函数内部：','a = ',a)