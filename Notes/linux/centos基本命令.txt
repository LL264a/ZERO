退出
    exit
    logout

清屏
    clear

当前操作用户
    whoami

查看终端
    tty

系统当前所有登入用户
    who
        当前登入用户和时间
            who am i

查看内核
    uname
    查看内核版本
        uname -r
    查看操作系统版本
        cat /etc/CentOS-release

查看硬件
    lscpu

用rpm安装装软件
    rpm -ivh [安装文件]

查看内存大小
    free -h
    cat /proc/meminfo

硬盘
    lsblk

网卡
    工具
    mii-tool (设备名)
        link 表示连接

当前使用是shell
    echo $SHELL

查看当前系统shell
    cat /etc/shells

主机名
    hostname

显示当前命令提示符函数
    echo $PS1
        黄色高亮命令提示符
            PS1="\[\e[1;33m\][\u|\h \w]\\$\[\e[0m\]"
        蓝色高亮命令提示符
            PS1="\[\e[1;34m\][\u|\h \w]\\$\[\e[0m\]"
        红色高亮命令提示符
            PS1="\[\e[1;31m\][\u|\h \w]\\$\[\e[0m\]"
        给路径换颜色
            PS1="\[\e[1;31m\][\u|\h\[\e[0m\\e[1;32m \w\e[0m\ \\$" 有Bug
        CentOS
            cd /etc/profile.d/ nano env.sh
        Ubuntu
            nano .bashrc 第59 60 行

VM 自动登入root用户
    nano /etc/gdm/custom.conf
    在[daemon]里添加
        AutomaticLoginEnable=true
        AutomaticLogin=root

添加开机提示
    nano /etc/motd
        Welcome to **(写你想要的东西)

移动文件
    mv [文件名 移动路径]/文件名(还可以顺便改文件名)

当前shell命令集
    help

命令来源
    type 
    查看内外部命令
    type -a **

显示字符串
    echo  |回显

查看命令路径
    which   whereis_可查看文件路径，配置文件文件路径，和帮助文件路径 

显示环境
    echo $PATH

Alias 别名
    显示当前shell进程所有可用的命令别名
        alias
    定义别名name，其相当雨执行命令VALUE
        alias NAME="VALUE"
            编辑.bashrc
                alias aria2='/etc/init.d/aria2 start'
            立即生效
                bashrc = bash.bashrc /etc
                source .bashrc
                source = .

取消别名
    unalias

使用原始命令
    'ALIASNAME'
    ALIAASNAME
    command ALIASNAME

; 一行执行多命令
\ 可用多行输入命令
Ctrl+C 退出
sleep * 等待 时间

时间
    系统时间
        date
    硬件时间
        clock
    以系统时间为准，校正硬件时间
        clock -w
    以硬件时间为准，校正系统时间
        clock -s
    修改时区
        timedateclt set-timezone

日历
    cal 月 -y年

关机
    poweroff

重启
    reboot 
        -f 强制，不调用shutdown
        -p 强制
    shutdown[OPTION]...[TIME][MESSAGE]
        -r :reboot
        -h :halt    关机
        -c :cancel  取消关机
        TIME:无指定，默认相当于+1
            now :立刻 相当于+0
            +m:相对时间表示法，几分钟后；列如+3
            hh:mm :绝对时间表示,指明具体时间

远程协助
    screen命令
       创建新连接
           screen -S(大写) [name]
       加入会话
           screen -x [name]
       退出
           exit
       剥离当前screen会话
           Ctrl+a,d
       显示所有已经打开screen会话
           screen -ls
       恢复某screen会话
           screen -r [name]

echo命令
    功能: 显示字符
    语法: echo [-neE][字符串]
    说明: echo会将输入的字符串送往标准输出。输出的字符串间以空白字符隔开，并在最后加上换行号
    选项: 
        -E (默认) 不支持 \ 解释功能
        -n 不自动换行
        -e 启用 \ 字符的解释功能
    显示变量
        echo "$VAR_NAME" 变量会替换，弱引用
        echo '$VAR_NAME' 变量不会替换，强引用
    启用命令选项-e,若字符串中出现以下字符,则特别加以处理，而不会将它当成一般文字输出
        \a 发出警告声   echo -e "\a"
        \b 退格键
        \c 最后不加上换行符号
        \n 换行且光标移至行首
        \r 回车,即光标移至行首，但不换行
        \t 插入tab
        \\ 插入\字符
            echo -e '\033[43;31;5mmagedu\033[om'
        \xHH 插入HH(十六进制) 所代表的ASCII数字(man 7 ascii)
    命令行扩展: $()或"
    把一个命令的输出打印给另一个命令的参数
    echo "This system's name is $(hostname)
    This system's name is server1.example.com
    echo "i am 'whoami'"
    括号扩展:{  }
        打印重复字符串的简化形式
        echo file{1,3,5} 结果为: file1 file3 file5
        rm -f file{1,3,5}
        echo {1..10}
        echo {a..z}
        echo {000..20..2}

Tab键
    命令补全
        内部命令:
        外部命令: bash根据PATH环境变量定义的路径，自左而右在每个路径搜寻以给定命令名命名的文件,第一次找到的命令即为要执行的命令
        用户给定的字符串只有一条唯一对应的命令，直接补全
        否则,再次Tab会给出列表
    路径补全
        把用户给出的字符串当成路径开头，并在其指定上级目录下搜索以指定的字符串开头的文件名
        如果唯一:则直接补全
        否则:再次Tab会给出列表

Help
    Whatis
        显示命令的简短描述
        使用数据库
        刚安装后不可立即使用
        makewhatis |mandb
        使用示例
            whatis cal |或man -f cal
        命令帮助
            内部命令: 
                help COMMAND 或者 man bash
            外部命令: 
                (1) COMMAND --help
                    COMMAND -h
                (2) 使用手册(manual)
                    man COMMAND
                (3) 信息页
                    info COMMAND
                (4)程序自身的帮助文档
                    README
                    INSTALL
                    ChangeLog
                (5)程序官方文档
                    官方站点:Documentation
                (6)发行版的官方文档
                (7)Google

    命令history
        history [-c][-d offset][n]
        history -anrw [filename]
        history -ps arg [arg..]
            -c: 清空命令历史
            -d: offset:删除历史中指定的第offset命令
             n: 显示最近的n条历史
            -a: 追加本次会话新执行的命令历史列表至历史文件
            -r: 读历史文件附加到历史列表
            -w: 保存历史列表到指定的历史文件
            -n: 读历史文件中未读过的行到历史列表
            -p: 展开历史参数成多行,但不存在历史列表中
            -s: 展开历史参数成一行,附加在历史列表后
        ![history_port]:重复执行
        HISTORY: 命令历史记录的条数
        HISTFILE: 指定历史文件，默认为~/.bash_history
        HISTFILESIZE: 命令历史文件记录历史的条数
        HISTTIMEFORMAT= "%F %T " 显示时间
        HISTIGNORE= "str1:str2*..." 忽略str1,str2开头的历史
        控制命令历史的记录方式: 
            环境变量:HISTCONTROL
                ignoredups 默认，忽略重复命令，连续且相同为"重复"
                ignorespace 忽略所有已空白开头的命令
                ignoreboth 相当于 ignoredups,ignorespace的组合
                erasedups 删除重复命令
            export 变量名="值"
            存放在 /etc/profile 或 ~/.bash_history
        命令行历史
            保存你输入的命令历史。可以用它来重复执行命令
            登入shell时，会读取历史文件中记录下的命令 ~/.bash_history
            登入进shell后新执行的命令只会记录在缓存中；这些命令会用户退出时“追加”至命令历史文件中
            重复前一个命令,有4种方法
                重复前一个命令使用上 方向键,并回车执行
                按!!并回车执行
                输入Ctrl+p并回车执行
            !:0 执行前一条命令(去除参数)
            Ctrl + n 显示当前历史中的下一条命令,但不执行
            Ctrl + j 执行当前命令
            !n 执行 history命令输入对应序号n的命令
            !-n 执行 history历史中倒数第n个命令
            !string 重复前一个以"string"开头的命令
            !?string 重复前一个包含string的命令
            !string:p 仅打印命令历史,而不执行
            !$:p 打印输出!$(上一条命令的最后一个参数)的内容
            !*:p 打印输出!*(上一条命令的所有参数)的内容
            ^string 删除上一条命令中的第一个string
            ^string ^string将上一条，命令中的第一个string1替换为string2
            !:gs/string1/string2 将上一条命令中所有string1都替换为string2

            使用up(向上)和down(向下)键来上下浏览从前输入的命令
            Ctrl -r来在命令历史中搜索命令
            Ctrl +g : 从历史搜索模式退出
            要重新调用前一个命令中最后一个参数
            !$ 表示
            Esc . (点击Esc键后松开，然后点击.键)
            Alt+. (按住Alt键同时点击.键)
        
    COMMAND
        command !^ 利用上一个命令的第一个参数做cmd的参数
        command !$ 利用上一个命令的最后一个参数做cmd的参数
        command !* 利用上一个命令的全部参数做cmd的参数
        command !:n 利用上一个命令的第n个参数做cmd参数
        command !n:^ 调用第n条命令的第一个参数
        command !n:$ 调用第n条命令的最后一个参数
        command !n:m 调用第n条命令的第m个参数
        command !n:* 调用第n条命令的所有参数
        command !string:^ 从命令历史中搜索以 string,并获取它的第一个参数
        ommand !string:$ 从命令历史中搜索以 string,并获取它的最后一个参数
        command !string:n 从命令历史中搜索以 string,并获取它的第n个参数
        command !string:* 从命令历史中搜索以 string,并获取它的所有参数

    man命令
        查看man手册页
            man [章节] keyword
        列出所有帮助
            man -a keyword
        搜索man手册
            man -k keyword 列出所有匹配的页面
            使用 whatis 数据库
        相当于whatis
            man -f keyword
        答应man帮助文件的路径
            man -w [章节] keyword

        提供命令帮助的文件
        手册页存放在/usr/share/man
        几乎每个命令都有man的"命令"
        man页面分组为不同的"章节"
        统称为Linux手册
        man命令的配置文件: /etc/man.config | man_db.conf
            MANPATH /PATH/TO/SOMEWHER: 指明man文件搜索位置
        man -M /PATH/TO/SOMEWHER COMMAND:到指定位置下搜索
            COMMAND命令的手册页并显示
        中文man需要安装包man-pages-zh-CN 
        man章节
            1: 用户命令
            2: 系统调用
            3: C库调用
            4: 设备危机及特殊文件
            5: 配置文件格式
            6: 游戏
            7: 杂项
            8: 管理类的命令
            9: Linux 内核API
            查看章节
            Whatis [命令]
        man 帮助段落说明
        帮助手册中的段落说明:
            name 名称及简要说明
            SYNOPSIS 用法格式说明
                [] 可选内容
                <> 必选内容
                a|b 二选一
                {} 分组
                ... 同一内容可出现多次
            DESCRIPTION 详细说明
            OPTIONS 选项说明
            EXAMPLE 示例
            FILES 相关文件
            AUTHOR 作者
            COPYRIGHT 版本信息
            REPORTING BUGS bug信息
            SEE ALSO 其他帮助参考
        man命令的操作方法: 使用less命令实现
            space, ^v,^f,^F: 向文件尾翻屏
            b, ^b: 向文件首部翻屏
            d, ^d: 向文件尾部翻半屏
            u, ^u: 向文件首部翻半屏
            RETURN, ^N,e,^E or j or ^J: 向文件尾部翻一行 y or ^Y or ^P or k or ^k 向文件首部翻一行
            q: 退出
            #: 跳转至第#行
            1G:  回到文件首部
            G:翻至文件尾部
        man搜索
            /KEYWORD:
                以KEYWORDz指定的字符串为关键字，从当前位置向文件尾部搜索；不区分字符大小写:
                n: 下一个
                N: 上一条
            ？KEYWORD:
                以KEYWORDz指定的字符串为关键字，从当前位置向文件首部搜索；不区分字符大小写：
                n: 跟搜索命令同方向，下一个
                N: 跟搜索命令反方向，下上一个