资源分派
    Authentication: 认证
    Authorization:  授权
    Accoting|Autdition: 审计

用户user 
    ◆令牌token,identity
    ◆Linux用户: Username/UID
    ◆管理员:    root,0
    ◆普通用户:  1-6000 自动分配
        系统用户:   1-499, 1999(CentOS7)
            对守护进程获取资源进行权限分配
        登入用户:500+ 1000+(CentOS7)
            交互式登入

组group 
    ◆Linxu组:   Groupname/GID
    ◆管理员:    root,0
    ◆普通组:
        系统组: 1-499,1-999 (CentOS7)
        普通组: 500+,1000+ (CentOS7)

安全上下文
    ◆Linux安全上下文
        运行中程序: 进程(process)
        以进程发起者的身份运行:
            root:/bin/cat
            mage:/bin/cat
        进程所能够访问资源的权限取决于进程的运行者的身份

组的类别
    ◆Linux组的类别
        用户的主要组(primary group)
            用户必须属于一个且只有一个主组
            组名用用户名，且仅包含一个用户，私有组
        用户的附加组(supplementary group)
            一个用户可以属于零个或多个辅助组
    
用户和组的配置文件
    ◆Linux用户和组的主要配置文件:
        /etc/passwd:    用户及其属性信息(名称,UID,主组ID等)
        /etc/group:     组及其属性信息
        /etc/shadow:    用户密码及其相关属性
        /etc/gshadow:   组密码及其相关属性
        
密码加密
    ◆加密机制:
        加密:   明文-->密文
        解密:   密文-->明文
    ◆单向加密:  哈希算法,原文不同,密文比不同
        相同算法定长输出,获得密文不可逆推出原始数据
        雪崩效应:   初始条件微小改变,引起结果的巨大变化
            md5:    message digest ,128bits
            sha1:   secure hash algorithm, 160bits
            sha224: 224bits
            sha256: 256bits
            sha384: 384bits
            sha512: 512bits
    ◆更改加密算法
        authconfig --passalgo=sha256 -update

密码的复杂性策略
    ◆使用数字，大小字母，小写字母级特殊字符中至少3种
    ◆足够长
    ◆使用随机密码
    ◆定期更换，不要使用最近曾经使用过的密码

用户创建:   useradd
    ◆useradd [options]LOGIN
        -u      UID
        -o      配合-u选项,不检查UID的唯一性
        -g GID: 指明用户所属基本组，可为组名，也可以GID
        -c "COMMENT":   用户的注释信息
        -d HOME_DIR:    以指定的路径(不存在)为家目录
        -s SHELL:       指明用户的默认shell程序，可用列表在/etc/shells文件中
        -G GROUP1[,GROUP2,...]: 为用户指明附加组，组须事先存在
        -N 不创建系统用户 CentOS 6 :ID<500, CentOS 7:ID<1000
        -m      创建家目录,用于系统用户
        -M      不创建家目录，用于非系统用户
        
文件操作
    ◆vipw和vigr
    ◆pwck和grpck

用户和组管理命令
    ◆用户管理命令
        useradd
        usermod
        userdel
    ◆组账号维护命令
        groupadd
        groupmod
        groupdel

创建用户:useradd
    ◆默认值设定:/etc/default/useradd
    ◆显示或更改默认设置
        useradd -D
        useradd -D -s SHELL
        useradd -D -b BASE_DIR
        useradd -D -g GROUP

练习
    ◆1, 创建用户gentoo，附加组为bin和root，默认shell为/bin/csh,注释信息为"Gentoo Distribution"
    ◆2,创建下面的用户，组合组员关系
        名字为webs的组
        groupadd webs 
        用户Nginx使用webs作为附属组
        useradd -G webs nginx
        用户varnish，也使用webs作为附属组
        useradd -G webs varnish
        用户mysql，不可交互登入系统，且不是webs的成员，nginx，varnish，mysql密码都是magedu
        useradd -s /sbin/nologin  mysql
        echo magedu | passwd --stdin nginx
        echo magedu | passwd --stdin varnish 
        echo magedu | passwd --stdin mysql

新建用户的相关文件和命令
    ◆/etc/default/useradd
    ◆/etc/skel/*
    ◆/etc/login.defs
    ◆newusers passwd格式文件 批量创建用户
    ◆chpasswd 批量修改用户口令

用户使用修改
    ◆usermod [OPTIONS] login
        -u UID: 新UID
        -g GID: 新主组
        -G GROUP[,GROUP2,...[GROUPN]]:  新附加组,原来的附加组将被覆盖;若保留原有，则要同时使用-a选项
        —s SHELL:   新的默认SHELL
        -c 'COMMENT':   新的注释信息
        -d HOME:    新家目录不会自动创建;若要创建新家目录并移动原家数据，同时使用-m选项
        -l login_name:  新的名字；
        -L: lock 指定用户,在/etc/shadow 密码栏的增加！
        -U: unlock指定用户，在/etc/shadow 密码栏的！拿掉
        -e YYY-MM-DD:   指定用户账号过期日期
        -f INACTIVE:    设定非活动期限

切换用户或一其他用户身份执行命令
    ◆su [options...][-][user[args..]]
    ◆切换用户的的方式:
        su UserName: 非登录式切换,即不会读取目标用户的配置文件,不改变当前工作目录
        su-∪ surName: 登录式切换,会读取目标用户的配置文件,切换至家目录,完全切换
    ◆ root su至其他用户无须密码;非root用户切换时需要密码
    ◆换个身份执行命令
        su [-] UserName-C 'COMMAND'
    ◆选项:-| --ogin
        su-| UserName相当于su- UserName

删除用户
    ◆userdel [OPTIONS]...login
        -r: 删除用户家目录

查看用户相关的ID信息
    ◆id [OPTION]...[USER]
        -u: 显示UID
        -g: 显示GID
        -G: 显示用户所属的组的ID
        -n: 显示名称，需配合guG使用

设置密码
    ◆passwd [OPTIONS]UserName:修改指定用户的密码
    ◆常用选项:
        -d: 删除指定用户密码
        -l: 锁定指定用户
        -u: 解锁指定用户
        -e: 强制用户下次登入修改密码
        -f: 强制操作
        -n mindays: 指定最短使用时限
        -x maxdys:  最大使用时限
        -w warndays:    提前多少天开始警告
        -i inactivedays:    非活动期限
        --stdin:    从标准输入接收用户密码
            echo "PASSWORD"|passwd --stdin USERNAME

修改用户密码策略
    ◆chage [OPTION]...LOGIN
        -d LAST_DAY
        -E --expiredate EXPIRE_DATE
        -i --inactive INACTIVE
        -m --mindays MIN_DAYS
        -M --maxdys MAX_DAYS
        -W --warndays WARN_DAYS
        -l 显示密码策略
    ◆示例
        chage -d 0 tom 下次登入强制重设密码
        chage -m 0 -M 42 -W 14 -i 7 tom
        chage -E 2016-09-10 tom

用户相关的其他命令
    ◆chfn指定个人信息
    ◆chsh 指定shell
    ◆finger

创建组
    ◆groupadd [OPTION]...group_name
        -g GID: 指定GID;[GID_MIN,GID_MAX]
        -r: 创建系统组
            CentOS 6:ID<500
            CentOS 7:ID<1000

更改组密码
    ◆组密码:gpasswd
    ◆gpasswd [option]GROUP
        -a user 将user添加至指定组中
        -d user 从指定组中移除用户user
        -A user1,user2,... 设置有管理权限的用户列表
    ◆newgrp命令:临时切换主组
        如果用户不属于此组，这需要组密码

更改和查看组成员
    ◆groupmems [optinos][action]
        options:
            -g: --group groupname 更改为指定组(只有root)
        Actions:
            -a: --add username  指定用户加入组
            -d: --delete username   从组中删除用户
            -p: --purge 从组中清除所有成员
            -l: --list  显示组成员列表
    ◆groups [OPTION].[USERNAME]...查看用户所属组列表

文件权限
    ◆文件属性
        [root|GA-2 ~]# ll aria2.sh 
        -rwxr-xr-x    1     root   root   24820  Jun  3 21:54 aria2.sh*
        权限       引用计数  所有者 所属组   大小      时间       文件名
    ◆文件属性操作
        chown 设置文件的所有者
        chgrp 设置文件的属组信息
        
修改文集的属主和属组
    ◆修改文件的属主: chown
        chown [OPTION]...[OWNER][:[GROUP]] FILE
            用法:
                OWNER
                OWNER:GROUP
                :GROUP
                命令中的毛和可用.替换
                —R: 递归
                chown [OPTION]..-reference=RFILE FILE...
    ◆修改文件的属组: chgrp
        chgrp [OPTION]...GROUP FILE...
        chgrp [OPTION]...--reference=RFILE FILE
        -R递归

文件权限
    ◆文件的权限主要针对三类对象进行定义
        owner:  属主, u
        group:  属组，g
        other:  其他，o
    ◆每个文件针对每类访问者都定义了三种权限
        r:  Readable
        w:  Writable
        x:  eXcutable
    ◆文件:
        r:  可使用文件查看类工具取得其内容
        w:  可修改其内容
        x:  可以吧此文件提请内核启动为一个进程
    ◆目录:
        r:  可以使用类似查看此目录中文件列表
        w:  可在此目录中创建文件, 也可以删除此目录中的文件
        x:  可以使用ls -l查看此目录中文件元数据(须配合r),可使用cd进入此目录
        X:  只给目录x权限, 不给文件x权限

文件权限操作
    ◆文件权限操作命令:  chmod
    ◆文件权限(rwx|X)
        权限项      文件类型        读      写      执行        读      写      执行        读      写      执行
        字符表示    (d|l|c|s|p)    (r)     (w)      (x)       (r)     (w)      (x)       (r)     (w)      (x)
        数字表示                    4       2        1         4       2        1         4       2        1
        权限分配                     文  件  所  有  者          文  件  所  属  组           其   他   用  户
 
八进制数字 
    ◆--- 000 0
    ◆--x 001 1
    ◆-w- 010 2
    ◆-wx 011 3
    ◆r-- 100 4
    ◆r-x 101 5
    ◆rw- 110 6
    ◆rwx 111 7
    ◆例如:
        640: rw-r----
        755:rwxr-xr-x

新建文件和目录的默认权限
    ◆umask值 可以用来保留在创建文件权限
    ◆新建FILE权限: 666-umask
        如果所得结果某位存在执行(奇数)权限，则将其权限+1
    ◆新建DIR权限: 777-umask
    ◆非特权用户umask是002
    ◆root的umask 是 002
    ◆umask:查看
    ◆umask #:设定
        umask 002
    ◆umask -S 模式方式显示
    ◆umask -p 输出可被调用
    ◆全局设置: /etc/bashrc 用户设置: ~/.bashrc

练习
    ◆1、当用户 docker对/testin目录无执行权限时,意味着无法做哪些操作?

    ◆2、当用户 mongodb对/ testin目录无读权限时,意味着无法做哪些操作?

    ◆3、当用户reds对 /testin目录无写权限时,该目录下的只读文件fle1是否可修改和删除?

    ◆4、当用户 zabbix对/ testin目录有写和执行权限时,该目录下的只读文件fle是否可修改和删除?

    ◆5、复制/etc/stab文件到/ ar/tmp下,设置文件所有者为 tomcat读写权限,所属组为apps组有读写权限,其他人无权限

    ◆6、误删除了用户qit的家目录,请重建并恢复该用户家目录及相应的权限属性

LInux文件系统上的特殊权限
    ◆SUID,SGID,Sticky
        SUID:   作用于二进制可执行的文件上，功能，当用户执行此文件，会继承此文件所有者的权限
        SGID:   作用于二进制可执行的文件上，功能，当用户执行此文件，会继承此文件所属组的权限
                作用于目录上，功能，当用户在此目录建新文件时，此新文件的所属主继承目录的所属组
        Sticky: 作用于目录上，功能，对目录的文件，只能删除自己的文件
    ◆三种常用权限: r,w,x, user,group,other
    ◆安全上下文
    ◆前提: 进程有属主和属组;文件有属主和属组
        1，任何一个可执行程序文件能不能启动为进程，取决发起者对程序文件是否拥有执行权限
        2，启动为进程之后，其进程的属主为发起者，进程的属组为发起者所属组
        3，进程访问文件时的权限，取决于进程的发起者
            a, 进程的发起者，同文件的属主：则应用文件属主权限
            b，进程的发起者，属于文件属组；则应用文件属组权限
            c，应用文件“其他”权限

可执行文件上的SUID权限
    ◆任何一个可执行程序文件能不能启动为进程: 取决发起者对程序文件是否拥有执行权限
    ◆启动为进程之后，其进程的属主为原有程序文件的属主
    ◆SUID支队二进制可执行程序有效
    ◆SUID设置在目录上无意义
    ◆权限设定:
        chomd u=s FILE
        chmod u-s FILE

可执行文件上的SGID权限
    ◆任何一个可执行文件能不能启动为进程：取决于发起者对程序文件是否拥有执行权限
    ◆启动为进程之后，其进程的属组为原程序文件的属组
    ◆权限设定: 
        chomd g+s FILE
        chomd g-s FILE

目录上的SGID权限
    ◆默认情况下，用户创建文件时，其属组为此用户所属的主组
    ◆一旦某个目录被设定了SGID，则对此目录有写权限的用户在此目录中创建的文件所属的组为此目录的属组
    ◆通常用于创建一个协作目录
    ◆权限设定
        chomd g+s DIR
        chmod g-s DIR

Sticky 位
    ◆具有写权限的目录通常用户可以删除该文件中的任何文件，无论该文件的权限或拥有权
    ◆在目录设置Sitcky 位，只有文件的所有者或root可以删除该文件
    ◆sitcky 设置在文件上无意义
    ◆权限设定
        chomd o+t DIR
        chomd o-t DIR
    ◆例如：
        lis -id /tmp drwxrwxrwt 12 root root 4096 Nov 2 15:44 /mtp

特殊权限数字法
    ◆SUID SGID STICKY
        000 0
        001 1
        010 2
        011 3
        100 4
        104 5
        110 6
        111 7
    ◆chmod 4777 /tmp/a.txt

权限位映射
    ◆SUID:ueser，占据属主的执行权限位
        s:  属主拥有x权限
        S:  属主没有x权限
    ◆SGID:group,占据属组的执行权限位
        s: group拥有x权限
        S：group没有x权限
    ◆Sticky:other,占据other的执行权限位
        t：oher拥有x权限
        T：other没有x权限

设定文件特定属性
    ◆chattr +i 不能删除，改名，更改
    ◆chattr +a 只能追加内容
    ◆lsattr 显示特定属性
好像可以了。。。